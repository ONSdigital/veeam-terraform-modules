resource "google_project_iam_custom_role" "veeam-default" {
  role_id = "veeam_default"
  title   = "veeam-default"
  permissions = [
    "compute.disks.addResourcePolicies",
    "compute.disks.get",
    "compute.instances.get",
    "compute.resourcePolicies.create",
    "compute.resourcePolicies.get",
    "compute.resourcePolicies.use",
    "compute.zones.get",
    "serviceusage.services.list",
    "resourcemanager.projects.setIamPolicy"
  ]
}

resource "google_project_iam_custom_role" "veeam-backup" {
  role_id = "veeam_backup"
  title   = "veeam-backup"
  permissions = [
    "compute.addresses.list",
    "compute.regions.list",
    "compute.disks.list",
    "compute.disks.createSnapshot",
    "compute.disks.get",
    "compute.instances.get",
    "compute.instances.list",
    "compute.snapshots.create",
    "compute.snapshots.delete",
    "compute.snapshots.get",
    "compute.snapshots.list",
    "compute.snapshots.getIamPolicy",
    "compute.snapshots.setIamPolicy",
    "compute.snapshots.setLabels",
    "compute.subnetworks.list",
    "compute.routes.list",
    "compute.machineTypes.get",
    "compute.zones.list",
    "compute.globalOperations.list",
    "compute.globalOperations.get",
    "compute.zoneOperations.get",
    "compute.regionOperations.get",
    "compute.projects.get",
    "compute.regions.get",
    "compute.networks.list",
    "compute.firewalls.list",
    "resourcemanager.projects.get",
    "resourcemanager.projects.getIamPolicy",
    "logging.sinks.create",
    "logging.sinks.delete",
    "logging.sinks.get",
    "logging.sinks.list",
    "logging.sinks.update",
    "pubsub.subscriptions.create",
    "pubsub.subscriptions.delete",
    "pubsub.subscriptions.get",
    "pubsub.subscriptions.list",
    "pubsub.subscriptions.consume",
    "pubsub.topics.attachSubscription",
    "pubsub.topics.create",
    "pubsub.topics.delete",
    "pubsub.topics.detachSubscription",
    "pubsub.topics.get",
    "pubsub.topics.getIamPolicy",
    "pubsub.topics.list",
    "pubsub.topics.setIamPolicy",
    "pubsub.topics.update",
    "cloudkms.keyRings.list",
    "cloudkms.cryptoKeys.list",
    "cloudkms.cryptoKeys.setIamPolicy",
    "cloudkms.cryptoKeys.getIamPolicy",
    "serviceusage.services.list"
  ]
}

resource "google_project_iam_custom_role" "veeam-snapshot" {
  role_id = "veeam_snapshot"
  title = "veeam-snapshot"
  permissions = [
    "compute.addresses.list",
    "compute.firewalls.list",
    "compute.regions.list",
    "compute.disks.list",
    "compute.disks.createSnapshot",
    "compute.disks.get",
    "compute.instances.get",
    "compute.instances.list",
    "compute.networks.list",
    "compute.snapshots.create",
    "compute.snapshots.delete",
    "compute.snapshots.get",
    "compute.snapshots.list",
    "compute.subnetworks.list",
    "compute.routes.list",
    "compute.zones.list",
    "compute.globalOperations.list",
    "compute.globalOperations.get",
    "compute.zoneOperations.get",
    "compute.regionOperations.get",
    "resourcemanager.projects.get",
    "compute.snapshots.setLabels",
    "logging.sinks.create",
    "logging.sinks.delete",
    "logging.sinks.get",
    "logging.sinks.list",
    "logging.sinks.update",
    "pubsub.subscriptions.create",
    "pubsub.subscriptions.delete",
    "pubsub.subscriptions.get",
    "pubsub.subscriptions.list",
    "pubsub.subscriptions.consume",
    "pubsub.topics.attachSubscription",
    "pubsub.topics.create",
    "pubsub.topics.delete",
    "pubsub.topics.detachSubscription",
    "pubsub.topics.get",
    "pubsub.topics.getIamPolicy",
    "pubsub.topics.list",
    "pubsub.topics.setIamPolicy",
    "pubsub.topics.update",
    "cloudkms.keyRings.list",
    "cloudkms.cryptoKeys.list",
    "serviceusage.services.list"
  ]
}

resource "google_project_iam_custom_role" "veeam-repository" {
  role_id = "veeam_repository"
  title = "veeam-repository"
  permissions = [
    "storage.buckets.getIamPolicy",
    "storage.buckets.setIamPolicy",
    "storage.buckets.list",
    "storage.buckets.get",
    "storage.objects.create",
    "storage.objects.delete",
    "storage.objects.list",
    "storage.objects.get",
    "storage.hmacKeys.create",
    "storage.hmacKeys.list",
    "storage.hmacKeys.get",
    "resourcemanager.projects.get",
    "serviceusage.services.list"
  ]
}

resource "google_project_iam_custom_role" "veeam-restore" {
  role_id = "veeam_restore"
  title = "veeam-restore"
  permissions = [
    "compute.addresses.list",
    "compute.disks.create",
    "compute.disks.get",
    "compute.disks.setLabels",
    "compute.disks.use",
    "compute.disks.delete",
    "compute.disks.useReadOnly",
    "compute.firewalls.list",
    "compute.globalOperations.list",
    "compute.globalOperations.get",
    "compute.instances.create",
    "compute.instances.delete",
    "compute.instances.get",
    "compute.instances.setLabels",
    "compute.instances.setMachineResources",
    "compute.instances.setMetadata",
    "compute.instances.setMinCpuPlatform",
    "compute.instances.setScheduling",
    "compute.instances.setServiceAccount",
    "compute.instances.setTags",
    "compute.instances.start",
    "compute.instances.stop",
    "compute.instances.updateDisplayDevice",
    "compute.instances.updateNetworkInterface",
    "compute.instances.setDeletionProtection",
    "compute.machineTypes.list",
    "compute.networks.list",
    "compute.projects.get",
    "compute.regionOperations.get",
    "compute.regions.get",
    "compute.regions.list",
    "compute.snapshots.create",
    "compute.snapshots.delete",
    "compute.snapshots.get",
    "compute.snapshots.getIamPolicy",
    "compute.snapshots.list",
    "compute.snapshots.setLabels",
    "compute.snapshots.useReadOnly",
    "compute.subnetworks.list",
    "compute.subnetworks.use",
    "compute.subnetworks.useExternalIp",
    "compute.zoneOperations.get",
    "compute.zones.get",
    "compute.zones.list",
    "iam.serviceAccounts.actAs",
    "iam.serviceAccounts.list",
    "resourcemanager.projects.get",
    "cloudkms.cryptoKeys.list",
    "cloudkms.keyRings.list",
    "compute.addresses.use",
    "compute.addresses.useInternal",
    "compute.disks.list",
    "compute.instances.list",
    "compute.routes.list",
    "cloudkms.cryptoKeys.setIamPolicy",
    "cloudkms.cryptoKeys.getIamPolicy",
    "serviceusage.services.list"
  ]
}

resource "google_project_iam_custom_role" "veeam-worker" {
  role_id = "veeam_worker"
  title = "veeam-worker"
  permissions = [
    "compute.regions.list",
    "compute.disks.list",
    "compute.instances.get",
    "compute.instances.list",
    "compute.snapshots.get",
    "compute.snapshots.list",
    "compute.zones.get",
    "compute.zones.list",
    "compute.globalOperations.get",
    "compute.zoneOperations.get",
    "compute.regionOperations.get",
    "resourcemanager.projects.get",
    "compute.projects.get",
    "compute.firewalls.list",
    "compute.snapshots.getIamPolicy",
    "compute.networks.list",
    "compute.subnetworks.list",
    "resourcemanager.projects.getIamPolicy",
    "iam.serviceAccounts.actAs",
    "compute.disks.create",
    "compute.disks.createSnapshot",
    "compute.disks.delete",
    "compute.disks.setLabels",
    "compute.instances.create",
    "compute.instances.delete",
    "compute.instances.attachDisk",
    "compute.instances.detachDisk",
    "compute.instances.setMetadata",
    "compute.instances.setServiceAccount",
    "compute.instances.setLabels",
    "compute.instances.setTags",
    "compute.routes.list",
    "compute.regions.get",
    "compute.snapshots.create",
    "compute.snapshots.setLabels",
    "compute.snapshots.setIamPolicy",
    "compute.snapshots.delete",
    "pubsub.subscriptions.consume",
    "pubsub.subscriptions.create",
    "pubsub.subscriptions.delete",
    "pubsub.subscriptions.list",
    "pubsub.subscriptions.get",
    "logging.sinks.get",
    "logging.sinks.delete",
    "logging.sinks.list",
    "pubsub.topics.attachSubscription",
    "pubsub.topics.create",
    "pubsub.topics.delete",
    "pubsub.topics.list",
    "pubsub.topics.get",
    "pubsub.topics.publish",
    "compute.machineTypes.get",
    "compute.subnetworks.get",
    "compute.subnetworks.use",
    "compute.subnetworks.useExternalIp",
    "compute.disks.use",
    "serviceusage.services.list"
  ]
}